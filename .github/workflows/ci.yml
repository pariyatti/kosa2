name: CI
on: push

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    container:
      image: timbru31/ruby-node:latest

    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: true

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: kosa2_ci
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          ref: 'main'

      - name: Setup app dependencies
        run: |
          gem install bundler -v 2.4.10 --no-document
          bundle install --jobs 4 --retry 3

      - name: Setup database
        env:
          RAILS_ENV: test
          POSTGRES_HOST: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: kosa2_ci
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
        run: |
          cp config/database.ci.yml config/database.yml
          bundle exec rails db:create
          bundle exec rails db:migrate

      - name: Create known_hosts
        run: "mkdir -p ~/.ssh && ssh-keygen -F github.com || ssh-keyscan github.com >> ~/.ssh/known_hosts"
        shell: bash

      - name: Clone TXT Files
        env:
          TXT_PA_TOKEN: ${{ secrets.TXT_PA_TOKEN }}
        run: "./bin/kosa-clone-txt-files.sh"
        shell: bash

      - name: Run Tests
        env:
          RAILS_TEST_ENV: smoke
          RAILS_ENV: test
          POSTGRES_HOST: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: kosa2_ci
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
        run: bundle exec rake test
